# Database Configuration (Development)
DATABASE_URL=postgresql+psycopg2://postgres:devpassword123@localhost:5432/postgres
POSTGRES_DB=postgres
POSTGRES_USER=postgres
POSTGRES_PASSWORD=password

# Redis Configuration (Development)
REDIS_URL=redis://localhost:6379

# SECURITY CRITICAL: These must be set for production deployment!
# Generate strong, random values for production. Leave empty for development (auto-generated).
SECRET_KEY=2CWaQcQgzCTj2jOvE4cT5AyiZMsYhi2F

# Encryption Configuration - REQUIRED for secure token storage
# Generate using: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
ENCRYPTION_KEY=your_base64_encoded_fernet_key_here

# Supabase Configuration - Replace with your actual values
SUPABASE_URL=https://ltkxhcebthobvbqnqzvd.supabase.co
SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imx0a3hoY2VidGhvYnZicW5xenZkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2Nzc4MDUsImV4cCI6MjA2OTI1MzgwNX0.kaJQTAa31RPs6Puw5__1Bfh73JKOS6EFxbY7kmfjGrc

# Application Configuration (Development)
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=debug

# Frontend Configuration
FRONTEND_URL=http://localhost:3000

# CORS Configuration
ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000,https://localhost:3000,https://127.0.0.1:3000
ALLOWED_METHODS=*
ALLOWED_HEADERS=*

# Machine Learning Service (Development)
ML_SERVICE_URL=http://localhost:8001
ML_CONFIDENCE_THRESHOLD=0.6

# External API Keys (Optional - leave empty if not using)
PLAID_CLIENT_ID=68930265ee10d40024103644
PLAID_SECRET=64f200a56096f66e4baceda0f6c997
PLAID_ENV=sandbox
SENDGRID_API_KEY=
OPENAI_API_KEY=

# Security Settings (Development - relaxed for testing)
ENABLE_ADMIN_BYPASS=true
CSRF_PROTECTION=false
RATE_LIMITING=false

# Development Feature Toggles
# Set to false to disable services for UI-only development
ENABLE_DATABASE=true
ENABLE_REDIS=true
ENABLE_ML_WORKER=true
ENABLE_PLAID=true
ENABLE_EMAIL=false

# Application Scaling Configuration
# CRITICAL: Must remain 1 for current architecture due to in-memory caches
# Multi-worker support requires Redis-based caching (future enhancement)
UVICORN_WORKERS=1

# Cache Configuration (TTL-based bounded caches)
CACHE_DEFAULT_TTL=300
CACHE_DEFAULT_MAX_SIZE=1000
SYNC_JOBS_CACHE_MAX_SIZE=500
SYNC_JOBS_CACHE_TTL=900
MERCHANT_CACHE_MAX_SIZE=2000
MERCHANT_CACHE_TTL=3600
RULE_CACHE_MAX_SIZE=1000
RULE_CACHE_TTL=300

# Mock/Demo Mode (for UI development without backend)
USE_MOCK_DATA=false
UI_ONLY_MODE=false
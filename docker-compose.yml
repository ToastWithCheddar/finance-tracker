services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-devpassword123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - finance-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - finance-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./backend:/app:cached
      - ./ml_models:/app/ml_models:cached
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-devpassword123}@postgres:5432/${POSTGRES_DB:-postgres}
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=${SECRET_KEY:-hSWGdEXdVEeO562IWykcvKF6Z727uGJj}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-msgepln3L8OrgjkGWxCz0O0ZyrQ7x5RK}
      - SUPABASE_URL=${SUPABASE_URL:-postgresql://postgres:w1uMADMUP6D4Jl8O@db.ltkxhcebthobvbqnqzvd.supabase.co:5432/postgres}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY:-eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imx0a3hoY2VidGhvYnZicW5xenZkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTM2Nzc4MDUsImV4cCI6MjA2OTI1MzgwNX0.kaJQTAa31RPs6Puw5__1Bfh73JKOS6EFxbY7kmfjGrc}
      - ENVIRONMENT=development
      - DEBUG=true
      - LOG_LEVEL=debug
      - ENABLE_PLAID=${ENABLE_PLAID:-true}
      - PLAID_CLIENT_ID=${PLAID_CLIENT_ID:-}
      - PLAID_SECRET=${PLAID_SECRET:-}
      - PLAID_ENV=${PLAID_ENV:-sandbox}
      - PLAID_PRODUCTS=${PLAID_PRODUCTS:-transactions,accounts,liabilities}
      - PLAID_COUNTRY_CODES=${PLAID_COUNTRY_CODES:-US}
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - finance-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    restart: unless-stopped
    volumes:
      - ./frontend:/app:cached
      - frontend_node_modules:/app/node_modules
    ports:
      - "3000:3000"
      - "3001:3001"
    environment:
      - VITE_API_URL=http://localhost:8000/api
      - VITE_APP_NAME=Finance Tracker (Dev)
      - VITE_APP_VERSION=1.0.0-dev
      - VITE_ENABLE_DEVTOOLS=true
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev
    depends_on:
      - backend
    networks:
      - finance-network

  ml-worker:
    build:
      context: ./ml-worker
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./ml-worker:/app:cached
      - ./ml_models:/app/models:cached
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-devpassword123}@postgres:5432/${POSTGRES_DB:-postgres}
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - finance-network
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - finance-network

volumes:
  postgres_data:
  redis_data:
  frontend_node_modules:

networks:
  finance-network:
    driver: bridge